AWSTemplateFormatVersion: "2010-09-09"
Description: VPC+ASG+LB

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Nome
          Value: "Davide"
        - Key: Cognome
          Value: "Carroccio"  
        - Key: Environment
          Value: "DevOpsAcademy"

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: "Public Subnet 1"
        - Key: Environment
          Value: "DevOpsAcademy"

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: "Public Subnet 2"
        - Key: Environment
          Value: "DevOpsAcademy"

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  InternetRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Instance SG"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: '0.0.0.0/0'

  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-06935448000742e6b
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd php php-mysql
          systemctl enable httpd
          systemctl start httpd
          echo "<?php phpinfo(); ?>" > /var/www/html/index.php
          chkconfig httpd on

  GruppoAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: AutoSG
      LaunchConfigurationName: !Ref LaunchConfig
      Cooldown: 300
      DesiredCapacity: 2
      MaxSize: 4
      MinSize: 1
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: ASGInstance
          PropagateAtLaunch: true

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      Name: TargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      TargetType: instance
      Tags:
        - Key: Nome
          Value: "Davide"
        - Key: Cognome
          Value: "Carroccio"
        - Key: Environment
          Value: DevOpsAcademy

  ELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: LoadBalancer
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref SecurityGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ELB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup 

Outputs:
  AutoScalingGroup:
    Value: !Ref GruppoAutoScaling
    Description: Auto Scaling Group for the application instances
  VPC:
    Value: !Ref VPC
    Description: The ID of the VPC
  PublicSubnet1:
    Value: !Ref PublicSubnet1
    Description: The ID of public subnet 1
  PublicSubnet2:
    Value: !Ref PublicSubnet2
    Description: The ID of public subnet 2
  LoadBalancerEndpoint:
    Value: !GetAtt ELB.DNSName
    Description: The endpoint URL of the load balancer
